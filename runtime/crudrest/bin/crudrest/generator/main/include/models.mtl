[comment encoding = Cp1256 /]
[module models('http://crudrest.msde.ui.ac.ir')/]
[import crudrest::generator::main::service /]
[import crudrest::generator::main::include::model::entityModel/]
[import crudrest::generator::main::include::model::pageModel/]
[import crudrest::generator::main::include::model::menuModel/]
[template public models(plg : CrudRestPlugin,directory:String, prefix:String, td:String)]

[file (directory+'/includes/model/index.php', false, 'UTF-8')]
<?php // Silence is golden
[/file]

[entityModel(directory,prefix,td)/]
[pageModel(directory,prefix,td)/]
[menuModel(directory,prefix,td)/]

[file (directory+'/includes/'+ prefix +'_Models.php', false, 'UTF-8')]
<?php
/**
[getCopyrightComment()/]
 */
include_once '[prefix/]_Field.php';
include_once '[prefix/]_Relation.php';
class [prefix/]_Models {

	//Models instance static field
	private static $instance=null;

	//static function to access plugin model instance as singletone
	public static function get_instance() {
	  if (self::$instance==null) self::$instance = new [prefix/]_Models();
	  return self::$instance;
	}

	private $entities=['[]'/];
	private $pages=['[]'/];
	
[for (entity : Entity|plg.serviceProvider.entityModel)]
	private function get_entity_[entity.key/](){
		return include 'model/entity/[entity.key/].php';
	}
[/for]
[for(page:UIPage|plg.gui.page)]
	public function get_page_[page.key/](){
		return include 'model/page/[page.key/].php';
	}
[/for]
	public static function get_admin_menus():array{
		$menus=array();
[if (plg.gui.menu.isNotEmpty())]
[for(menu:Menu|plg.gui.menu)]
			$menus['[\''+menu.slug+'\']'/]= include 'model/menu/[menu.slug/].php';
[/for]		
[/if]
		return $menus;
	}

	// Get entity model by key
	public static function get_entity($key): ?[prefix/]_Entity {
      $models=self::get_instance();
	  if (!$key) return null;
	  if (array_key_exists($key,$models->entities)) return $models->entities['[$key]'/];
	  $get_entity_func='get_entity_'.$key;
	  if (!method_exists($models,$get_entity_func)) return null;
	  $entity=$models->$get_entity_func();
	  $models->entities['[$key]'/]=$entity;
	  return $entity;
	}
	public static function get_page($key): ?[prefix/]_Page{
	  if (!$key) return null;
	  $models=self::get_instance();
	  if (array_key_exists($key,$models->pages)) return $models->pages['[$key]'/];
	  $get_page_func='get_page_'.$key;
	  if (!method_exists($models,$get_page_func)) return null;
	  $page=$models->$get_page_func();
	  $models->pages['[$key]'/]=$page;
	  return $page;
	}
	public static function get_pages(): array{
[for(page:UIPage|plg.gui.page)]
	  self::get_page('[page.key/]');
[/for]
	  return self::get_instance()->pages;
  }
	public static function get_entities(): array{
[for(entity:Entity|plg.serviceProvider.entityModel)]
	  self::get_entity('[entity.key/]');
[/for]
	  return self::get_instance()->entities;
  }
}
[/file]
[/template]
