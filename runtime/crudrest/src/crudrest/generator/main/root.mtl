[comment encoding = Cp1256 /]
[module root('http://crudrest.msde.ui.ac.ir')/]
[import crudrest::generator::main::service  /]
[template public root(plg : CrudRestPlugin,directory:String, prefix:String, td:String)]
[file (directory+'/index.php', false, 'UTF-8')]
<?php // Silence is golden
[/file]

[file (directory+'/'+getLanguagesDirectory()+'/'+'index.php', false, 'UTF-8')]
<?php // Silence is golden
[/file]
[file (directory+'/'+ directory +'.php', false, 'UTF-8')]
<?php
/**
 *this plugin generated by WordPressCrudRest plugin generator! 
 * @link              http://example.com
 * @since             1.0.0
 * @package           [plg.name/]
 *
 * @wordpress-plugin
* Plugin Name: [plg.name/]
[if( plg.detail->size()>0)]
* Description: [plg.detail.description/]
* Version: [plg.detail.version/]
* Plugin URI: [plg.detail.pluginURI/]
* Author: [plg.detail.author/]
* Author URI: [plg.detail.authorURI/]
* License: [plg.detail.license/]
* License URI: [plg.detail.licenseURI/]
* Text Domain: [plg.detail.textDomain/]
* Domain Path: [plg.detail.domainPath/]
* Requires PHP: [plg.detail.minVersionPHP/]
* Requires at least: [plg.detail.minVersionWP/]
[if( plg.detail.network)]
* Network: true
[/if]
[/if] 
*/
//Abort If this file is called directly!
defined( 'ABSPATH' ) or die( 'Direct Access Denied!' );

/**
 * Currently plugin version.
 * Start at version 1.0.0 and use SemVer - https://semver.org
 * Rename this for your plugin and update it as you release new versions.
 */
define( '[prefix/]_VERSION', '[plg.detail.version/]' );
define( '[prefix/]_PATH',  plugin_dir_path( __FILE__ ));

/**
 * The code that runs during plugin activation.
 * This action is documented in includes/[prefix/]_activator.php
 */
function [prefix/]_activate() {

	require [prefix/]_PATH . 'includes/[prefix/]_activator.php';
	[prefix/]_Activator::activate();
}

/**
 * The code that runs during plugin deactivation.
 * This action is documented in includes/[prefix/]_deactivator.php
 */
function [prefix/]_deactivate() {
	require [prefix/]_PATH . 'includes/[prefix/]_deactivator.php';
	[prefix/]_Deactivator::deactivate();
}

register_activation_hook( __FILE__, '[prefix/]_activate' );
register_deactivation_hook( __FILE__, '[prefix/]_deactivate' );

/**
 * The core plugin class that is used to define internationalization,
 * admin-specific hooks, and public-facing site hooks.
 */
require [prefix/]_PATH . 'includes/[prefix/].php';

//plugin global variable


/**
 * Begins execution of the plugin.
 *
 * Since everything within the plugin is registered via hooks,
 * then kicking off the plugin from this point in the file does
 * not affect the page life cycle.
 *
 * @since    1.0.0
 */
function [prefix/]_run() {

	$plg = new [prefix/]();
	$plg->run();
}
[prefix/]_run();
[/file]

[file (directory+'/uninstall.php', false, 'UTF-8')]
<?php

/**
 * Fired when the plugin is uninstalled.
 *
 * When populating this file, consider the following flow
 * of control:
 *
 * - This method should be static
 * - Check if the $_REQUEST content actually is the plugin name
 * - Run an admin referrer check to make sure it goes through authentication
 * - Verify the output of $_GET makes sense
 * - Repeat with other user roles. Best directly by using the links/query string parameters.
 * - Repeat things for multisite. Once for a single site in the network, once sitewide.
 *
 * This file may be updated more in future version of the Boilerplate; however, this is the
 * general skeleton and outline for how the file should work.
 *
 * For more information, see the following discussion:
 * https://github.com/tommcfarlin/WordPress-Plugin-Boilerplate/pull/123#issuecomment-28541913
 *
[getCopyrightComment()/]
 */

// If uninstall not called from WordPress, then exit.
if ( ! defined( 'WP_UNINSTALL_PLUGIN' ) ) {
	exit;
}
require_once('includes/[prefix/]_db.php');
[prefix/]_db::get_db()->uninstall();
[/file]
[/template]
